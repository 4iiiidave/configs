# misc
function __help() {


  echo '   🏥  https://github.com/davidfmiller/configs'
  echo '   r  [...]  → rm [...]';
  echo '   g  [...]  → git [...]';
  echo '   c  [...]  → cd [...]';
  echo '   o  [...]  → open [...]';
  echo '   ..        → c ..';
  echo '   ~         → c ~';
  echo '   bb  [...] → bbedit [...]';
  echo '   py  [...] → python2 [...]';
  echo '   la  [...] → ls -l  [...]';
  echo '   lb  [...] → app launchbar [...]';
  echo '   mk  [...] → mkdir [...]';

}
alias ?="__help"

alias xml="__xmllint"

# ls
function __emoji () { python2 ~/Documents/git/bin/lsemoji "$@"; }

function __gitbranch() {
  git branch "$@"
}

# git (/status)
function __git() {
  if [ ! -n "$1" ]
  then

  branch=`git rev-parse --abbrev-ref HEAD`
  if [[ $branch ]];
  then
    echo "🌳 $branch"; git status -s .
  fi
  else
    git "$@"
  fi
}

function __xmllint() {
  xmllint --format -
}

# git (secured) commit
function __gitcommit() {
  git commit -S -m "$@"
}

# git rebase
function __gitrebase() {

  HOST="origin"
  BRANCH="master"

  if [ -n "$2" ]
  then
    HOST="$1"
    BRANCH="$2"
  else
    if [ -n "$1" ]
    then
      HOST="$1"
    fi
  fi

  git fetch $HOST $BRANCH
  git rebase $HOST/$BRANCH
}

if [[ -e ~/.motd ]];
then
  cat ~/.motd
fi

#
function __gittag() {
  if [ ! -n "$1" ]
  then
    echo "🚫  No version number provided" >&2
  else
    git tag -s "$1" -m "$1"
  fi
}



# git diff
function __gitdiff() {
  git diff "$@"
}

# git push
function __gitpush() {
  git push "$@"
}

# git undo
function __gitundo() {
  git reset --soft HEAD~1
}


# git log
function __gitlog() {
  git log --oneline --graph --decorate "$@"
}

# show
function __show() {

  if [ ! -n "$1" ]
  then
    open -R .
  else
    open -R "$1"
  fi
}


#
function __pyg() {

  LANG="html"
  if [ -n "$1" ]
  then
    LANG="$1"
  fi

  pygmentize -f html -l "$LANG"
}


# kill process listening on a given port number
function __killport() {
  if [ ! -n "$1" ]
  then
    echo "🚫  No port number" >&2
  else
    PID=$(sudo lsof -i ":$1" | sed '1d' | awk '{ print $2 }')
    if [ -n "$PID" ]
    then
      sudo kill -9 ${PID}
    fi
  fi
}

alias h='hugo'
alias hp='HUGO_ENV=production hugo'

alias la='__la'
alias l="__emoji"
alias killport="__killport"

# sys commands
alias m='mv'
alias r='rm'
alias desk='cd ~/Desktop; l'
alias docs='cd ~/Documents; l'

alias jek='bundle exec jekyll build'

# git shortcuts
alias g='__git'        # git /status
alias gd='__gitdiff'   # diff
alias gr='__gitrebase' # rebase
alias gl='__gitlog'    # log
alias gc='__gitcommit' # commit
alias gt='__gittag'    # tag
alias gb='__gitbranch' # branch
alias gp='__gitpush'   # push
alias gu='__gitundo'   # soft-undo last commit
alias gr='git-repo'

alias dq='dequarantine'



function __line-count() {
  wc -l | awk '{$1=$1};1'
}
alias line-count='__line-count'

alias filesize='stat -f%z'

alias pyg='__pyg'

# find by name
alias f="find . -iname"

# directory nav
function __cd () { cd "$@"; __emoji; }


alias 'c'="__cd"
alias '..'="c .."
alias '...'="c ../.."
alias '....'="c ../../.."
alias '~'="c ~"
alias 'mk'="mkdir"
alias 'show'="__show"

if [[ `os` = "macos" ]]
then

  function __open () {
    if [ ! -n "$1" ]
    then
      open .
    else
      open "$@"
    fi
  }
  alias 'o'="__open"

  # os x utilities
  alias 'xdns'="sudo killall -HUP mDNSResponder"
  alias 'close'="osascript -e 'tell application \"System Events\" to tell process \"Terminal\" to keystroke \"w\" using command down'"

  function __bb () { bbedit "$@"; }
  alias bb='__bb'

  alias tp='terminal-profile'

  function __launchbar () { python2 ~/Documents/git/apples/app launchbar "$@"; } # https://github.com/davidfmiller/apples
  alias lb='__launchbar'

  function __eject() { diskutil unmount "/Volumes/$@"; }
  alias eject="__eject"

  # quick look
  function __ql() { qlmanage -p "$@" &> /dev/null; }
  alias ql='__ql'

  export PS1="\n\u@\h: \w \n\D{%T}⚡ "

else
  export PS1="\n\u@\h: \w\n\D{%T} 💥 "
fi

# applications
function __py () { python2 "$@"; }
alias py='__py'

export HISTFILESIZE=3000

export iCloud="$HOME/Library/Mobile Documents/com~apple~CloudDocs"

export BASH_SILENCE_DEPRECATION_WARNING=1

# echoed on new terminal window/tab
echo ""
echo "`l --glyph "${PWD}"`  $PWD"
l --prefix="   "
